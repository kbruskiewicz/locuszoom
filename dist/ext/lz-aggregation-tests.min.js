/*! Locuszoom 0.13.0-beta.2 */
var LzAggregationTests=function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=12)}({12:function(e,t,n){"use strict";n.r(t);var r=n(5),o=n(2);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t,n){return(i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return t&&c(e.prototype,t),n&&c(e,n),e}function f(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&l(e,t)}function l(e,t){return(l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=d(e);if(t){var o=d(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return p(this,n)}}function p(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e){var t=e.Adapters.get("BaseAdapter"),n=e.Adapters.get("ConnectorSource"),a=function(e){f(n,e);var t=h(n);function n(){return u(this,n),t.apply(this,arguments)}return s(n,[{key:"getURL",value:function(e,t,n){var r=e.aggregation_tests||{};t.header||(t.header={}),t.header.aggregation_genoset_id=r.genoset_id||null,t.header.aggregation_genoset_build=r.genoset_build||null,t.header.aggregation_phenoset_id=r.phenoset_id||null,t.header.aggregation_pheno=r.pheno||null,t.header.aggregation_calcs=r.calcs||{};var o=r.masks||[];return t.header.aggregation_masks=o,t.header.aggregation_mask_ids=o.map((function(e){return e.name})),this.url}},{key:"getCacheKey",value:function(e,t,n){return this.getURL(e,t,n),JSON.stringify({chrom:e.chr,start:e.start,stop:e.end,genotypeDataset:t.header.aggregation_genoset_id,phenotypeDataset:t.header.aggregation_phenoset_id,phenotype:t.header.aggregation_pheno,samples:"ALL",genomeBuild:t.header.aggregation_genoset_build,masks:t.header.aggregation_mask_ids})}},{key:"fetchRequest",value:function(e,t,n){var r=this.getURL(e,t,n),o=this.getCacheKey(e,t,n);return fetch(r,{method:"POST",body:o,headers:{"Content-Type":"application/json"}}).then((function(e){if(!e.ok)throw new Error(e.statusText);return e.text()})).then((function(e){var t="string"==typeof e?JSON.parse(e):e;if(t.error)throw new Error(t.error);return t}))}},{key:"annotateData",value:function(e,t){if(!e.groups)return{groups:[],variants:[]};e.groups=e.groups.filter((function(e){return"GENE"===e.groupType}));var n=r.helpers.parsePortalJSON(e),o=n[0],a=n[1];o=o.byMask(t.header.aggregation_mask_ids);var i=t.header.aggregation_calcs;return i&&0!==Object.keys(i).length?new r.helpers.PortalTestRunner(o,a,i).toJSON().then((function(e){var n=t.header.aggregation_masks.reduce((function(e,t){return e[t.name]=t.description,e}),{});return e.data.groups.forEach((function(e){e.mask_name=n[e.mask]})),e.data})).catch((function(e){throw console.error(e),new Error("Failed to calculate aggregation test results")})):{variants:[],groups:[],results:[]}}},{key:"normalizeResponse",value:function(e){return e}},{key:"combineChainBody",value:function(e,t){return t.body}}]),n}(o.BaseApiAdapter),c=function(e){f(n,e);var t=h(n);function n(e){if(u(this,n),!e||!e.from)throw"Must specify the name of the source that contains association data";return t.apply(this,arguments)}return s(n,[{key:"parseInit",value:function(e){i(d(n.prototype),"parseInit",this).call(this,e),this._from=e.from}},{key:"getRequest",value:function(e,t,n){if(t.discrete&&!t.discrete[this._from])throw"".concat(this.constructor.SOURCE_NAME," cannot be used before loading required data for: ").concat(this._from);return Promise.resolve(JSON.parse(JSON.stringify(t.discrete[this._from].variants)))}},{key:"normalizeResponse",value:function(e){var t=new RegExp("(?:chr)?(.+):(\\d+)_?(\\w+)?/?([^_]+)?_?(.*)?");return e.map((function(e){var n=e.variant.match(t);return{variant:e.variant,chromosome:n[1],position:+n[2],ref_allele:n[3],ref_allele_freq:1-e.altFreq,log_pvalue:-Math.log10(e.pvalue)}})).sort((function(e,t){return(e=e.variant)<(t=t.variant)?-1:e>t?1:0}))}}]),n}(t),l=function(e){f(n,e);var t=h(n);function n(){return u(this,n),t.apply(this,arguments)}return s(n,[{key:"_getRequiredSources",value:function(){return["gene_ns","aggregation_ns"]}},{key:"combineChainBody",value:function(e,t){var n=this._source_name_mapping.aggregation_ns,r=this._source_name_mapping.gene_ns,o=t.discrete[n],a=t.discrete[r],i={};return o.groups.forEach((function(e){Object.prototype.hasOwnProperty.call(i,e.group)||(i[e.group]=[]),i[e.group].push(e.pvalue)})),a.forEach((function(e){var t=e.gene_name,n=i[t];n&&(e.aggregation_best_pvalue=Math.min.apply(null,n))})),a}}]),n}(n);e.Adapters.add("AggregationTestSourceLZ",a),e.Adapters.add("AssocFromAggregationLZ",c),e.Adapters.add("GeneAggregationConnectorLZ",l)}"undefined"!=typeof LocusZoom&&LocusZoom.use(y),t.default=y},2:function(e,t,n){"use strict";function r(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,o=!1,a=void 0;try{for(var i,u=e[Symbol.iterator]();!(r=(i=u.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw a}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t,n){return(i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=l(e);if(t){var o=l(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return f(this,n)}}function f(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return t&&p(e.prototype,t),n&&p(e,n),e}function y(e,t,n){if(t&&n||!t&&!n)throw new Error("".concat(e,' must provide a parameter specifying either "build" or "source". It should not specify both.'));if(t&&!["GRCh37","GRCh38"].includes(t))throw new Error("".concat(e," must specify a valid genome build number"))}n.r(t),n.d(t,"BaseAdapter",(function(){return g})),n.d(t,"BaseApiAdapter",(function(){return v})),n.d(t,"AssociationLZ",(function(){return m})),n.d(t,"ConnectorSource",(function(){return j})),n.d(t,"GeneConstraintLZ",(function(){return R})),n.d(t,"GeneLZ",(function(){return w})),n.d(t,"GwasCatalogLZ",(function(){return _})),n.d(t,"LDServer",(function(){return b})),n.d(t,"PheWASLZ",(function(){return S})),n.d(t,"RecombLZ",(function(){return k})),n.d(t,"StaticSource",(function(){return O}));var g=function(){function e(t){h(this,e),this._enableCache=!0,this._cachedKey=null,this.__dependentSource=!1,this.parseInit(t)}return d(e,[{key:"parseInit",value:function(e){this.params=e.params||{}}},{key:"getCacheKey",value:function(e,t,n){return this.getURL(e,t,n)}},{key:"getURL",value:function(e,t,n){return this.url}},{key:"fetchRequest",value:function(e,t,n){var r=this.getURL(e,t,n);return fetch(r).then((function(e){if(!e.ok)throw new Error(e.statusText);return e.text()}))}},{key:"getRequest",value:function(e,t,n){var r,o=this.getCacheKey(e,t,n);return this._enableCache&&void 0!==o&&o===this._cachedKey?r=Promise.resolve(this._cachedResponse):(r=this.fetchRequest(e,t,n),this._enableCache&&(this._cachedKey=o,this._cachedResponse=r)),r}},{key:"normalizeResponse",value:function(e){if(Array.isArray(e))return e;var t=Object.keys(e),n=e[t[0]].length;if(!t.every((function(t){return e[t].length===n})))throw new Error("".concat(this.constructor.name," expects a response in which all arrays of data are the same length"));for(var r=[],o=Object.keys(e),a=0;a<n;a++){for(var i={},u=0;u<o.length;u++)i[o[u]]=e[o[u]][a];r.push(i)}return r}},{key:"annotateData",value:function(e,t){return e}},{key:"extractFields",value:function(e,t,n,r){if(!Array.isArray(e))return e;if(!e.length)return e;for(var o=[],a=0;a<t.length;a++)o[a]=0;var i=e.map((function(e){for(var a={},i=0;i<t.length;i++){var u=e[t[i]];void 0!==u&&(o[i]=1),r&&r[i]&&(u=r[i](u)),a[n[i]]=u}return a}));return o.forEach((function(e,r){if(!e)throw new Error("field ".concat(t[r]," not found in response for ").concat(n[r]))})),i}},{key:"combineChainBody",value:function(e,t,n,r,o){return e}},{key:"parseResponse",value:function(e,t,n,r,o){var a=this,i=this.source_id||this.constructor.name;t.discrete||(t.discrete={});var u="string"==typeof e?JSON.parse(e):e;return Promise.resolve(this.normalizeResponse(u.data||u)).then((function(e){return Promise.resolve(a.annotateData(e,t))})).then((function(e){return Promise.resolve(a.extractFields(e,n,r,o))})).then((function(e){return t.discrete[i]=e,Promise.resolve(a.combineChainBody(e,t,n,r,o))})).then((function(e){return{header:t.header||{},discrete:t.discrete,body:e}}))}},{key:"getData",value:function(e,t,n,r){var o=this;if(this.preGetData){var a=this.preGetData(e,t,n,r);this.pre&&(e=a.state||e,t=a.fields||t,n=a.outnames||n,r=a.trans||r)}return function(a){return o.__dependentSource&&a&&a.body&&!a.body.length?Promise.resolve(a):o.getRequest(e,a,t).then((function(e){return o.parseResponse(e,a,t,n,r)}))}}}]),e}(),v=function(e){u(n,e);var t=s(n);function n(){return h(this,n),t.apply(this,arguments)}return d(n,[{key:"parseInit",value:function(e){if(i(l(n.prototype),"parseInit",this).call(this,e),this.url=e.url,!this.url)throw new Error("Source not initialized with required URL")}}]),n}(g),m=function(e){u(n,e);var t=s(n);function n(){return h(this,n),t.apply(this,arguments)}return d(n,[{key:"preGetData",value:function(e,t,n,r){return[this.params.id_field||"id","position"].forEach((function(e){t.includes(e)||(t.unshift(e),n.unshift(e),r.unshift(null))})),{fields:t,outnames:n,trans:r}}},{key:"getURL",value:function(e,t,n){var r=t.header.analysis||this.params.source||this.params.analysis;if(void 0===r)throw new Error("Association source must specify an analysis ID to plot");return"".concat(this.url,"results/?filter=analysis in ").concat(r," and chromosome in  '").concat(e.chr,"' and position ge ").concat(e.start," and position le ").concat(e.end)}},{key:"normalizeResponse",value:function(e){return e=i(l(n.prototype),"normalizeResponse",this).call(this,e),this.params&&this.params.sort&&e.length&&e[0].position&&e.sort((function(e,t){return e.position-t.position})),e}}]),n}(v),b=function(e){u(n,e);var t=s(n);function n(e){var r;return h(this,n),(r=t.call(this,e)).__dependentSource=!0,r}return d(n,[{key:"preGetData",value:function(e,t){if(t.length>1&&(2!==t.length||!t.includes("isrefvar")))throw new Error("LD does not know how to get all fields: ".concat(t.join(", ")))}},{key:"findMergeFields",value:function(e){var t,n={id:this.params.id_field,position:this.params.position_field,pvalue:this.params.pvalue_field,_names_:null};if(e&&e.body&&e.body.length>0){var r=Object.keys(e.body[0]),o=(t=r,function(){for(var e=arguments,n=function(n){var r=e[n],o=t.filter((function(e){return e.match(r)}));if(o.length)return{v:o[0]}},r=0;r<e.length;r++){var o=n(r);if("object"===a(o))return o.v}return null}),i=n.id&&o(new RegExp("".concat(n.id,"\\b")));n.id=i||o(/\bvariant\b/)||o(/\bid\b/),n.position=n.position||o(/\bposition\b/i,/\bpos\b/i),n.pvalue=n.pvalue||o(/\bpvalue\b/i,/\blog_pvalue\b/i),n._names_=r}return n}},{key:"findRequestedFields",value:function(e,t){for(var n={},r=0;r<e.length;r++)"isrefvar"===e[r]?(n.isrefvarin=e[r],n.isrefvarout=t&&t[r]):(n.ldin=e[r],n.ldout=t&&t[r]);return n}},{key:"normalizeResponse",value:function(e){return e}},{key:"getRefvar",value:function(e,t,n){var r=this.findRequestedFields(n).ldin;if("state"===r&&(r=e.ldrefvar||t.header.ldrefvar||"best"),"best"===r){if(!t.body)throw new Error("No association data found to find best pvalue");var o=this.findMergeFields(t);if(!o.pvalue||!o.id){var a="";throw o.id||(a+="".concat(a.length?", ":"","id")),o.pvalue||(a+="".concat(a.length?", ":"","pvalue")),new Error("Unable to find necessary column(s) for merge: ".concat(a," (available: ").concat(o._names_,")"))}r=t.body[function(e,t){var n;n=/log/.test(t=t||"log_pvalue")?function(e,t){return e>t}:function(e,t){return e<t};for(var r=e[0][t],o=0,a=1;a<e.length;a++)n(e[a][t],r)&&(r=e[a][t],o=a);return o}(t.body,o.pvalue)][o.id]}return r}},{key:"getURL",value:function(e,t,n){var o=e.genome_build||this.params.build||"GRCh37",a=e.ld_source||this.params.source||"1000G",i=e.ld_pop||this.params.population||"ALL",u=this.params.method||"rsquare";"1000G"===a&&"GRCh38"===o&&(a="1000G-FRZ09"),y(this.constructor.name,o,null);var c=this.getRefvar(e,t,n),s=c&&c.match(/^(?:chr)?([a-zA-Z0-9]+?)[_:-](\d+)[_:|-]?(\w+)?[/_:|-]?([^_]+)?_?(.*)?/);if(!s)throw new Error("Could not request LD for a missing or incomplete marker format");var f=r(s,5),l=f[0],h=f[1],p=f[2],d=f[3],g=f[4];return c="".concat(h,":").concat(p),d&&g&&(c+="_".concat(d,"/").concat(g)),t.header.ldrefvar=l,[this.url,"genome_builds/",o,"/references/",a,"/populations/",i,"/variants","?correlation=",u,"&variant=",encodeURIComponent(c),"&chrom=",encodeURIComponent(e.chr),"&start=",encodeURIComponent(e.start),"&stop=",encodeURIComponent(e.end)].join("")}},{key:"combineChainBody",value:function(e,t,n,r,o){var a=this.findMergeFields(t),i=this.findRequestedFields(n,r);if(!a.position)throw new Error("Unable to find position field for merge: ".concat(a._names_));var u=e.rsquare?"rsquare":"correlation";return function(e,t,n,r){for(var o=0,i=0;o<e.length&&i<t.position2.length;)e[o][a.position]===t.position2[i]?(e[o][n]=t[r][i],o++,i++):e[o][a.position]<t.position2[i]?o++:i++}(t.body,e,i.ldout,u),i.isrefvarin&&t.header.ldrefvar&&function(e,t,n,r,o){for(var a=0;a<e.length;a++)e[a][n]&&e[a][n]===t?(e[a][r]=1,e[a][o]=1):e[a][r]=0}(t.body,t.header.ldrefvar,a.id,i.isrefvarout,i.ldout),t.body}},{key:"fetchRequest",value:function(e,t,n){var r=this.getURL(e,t,n),o={data:{}};return function e(t){return fetch(t).then().then((function(e){if(!e.ok)throw new Error(e.statusText);return e.text()})).then((function(t){return t=JSON.parse(t),Object.keys(t.data).forEach((function(e){o.data[e]=(o.data[e]||[]).concat(t.data[e])})),t.next?e(t.next):o}))}(r)}}]),n}(v),_=function(e){u(n,e);var t=s(n);function n(e){var r;return h(this,n),(r=t.call(this,e)).__dependentSource=!0,r}return d(n,[{key:"getURL",value:function(e,t,n){var r=e.genome_build||this.params.build;y(this.constructor.name,r,null);var o="GRCh38"===r?5:6,a=this.params.source||o;return"".concat(this.url,"?format=objects&sort=pos&filter=id eq ").concat(a," and chrom eq '").concat(e.chr,"' and pos ge ").concat(e.start," and pos le ").concat(e.end)}},{key:"findMergeFields",value:function(e){var t=Object.keys(e).find((function(e){return e.match(/\b(position|pos)\b/i)}));if(!t)throw new Error("Could not find data to align with GWAS catalog results");return{pos:t}}},{key:"extractFields",value:function(e,t,n,r){return e}},{key:"combineChainBody",value:function(e,t,n,r,o){if(!e.length)return t.body;var a=r[n.indexOf("log_pvalue")];function i(e,t,n,r,o){var i=e.n_catalog_matches||0;if(e.n_catalog_matches=i+1,!(e[a]&&e[a]>t.log_pvalue))for(var u=0;u<n.length;u++){var c=n[u],s=r[u],f=t[c];o&&o[u]&&(f=o[u](f)),e[s]=f}}for(var u=this.findMergeFields(t.body[0]),c=this.findMergeFields(e[0]),s=0,f=0;s<t.body.length&&f<e.length;){var l=t.body[s],h=e[f];l[u.pos]===h[c.pos]?(i(l,h,n,r,o),f+=1):l[u.pos]<h[c.pos]?s+=1:f+=1}return t.body}}]),n}(v),w=function(e){u(n,e);var t=s(n);function n(){return h(this,n),t.apply(this,arguments)}return d(n,[{key:"getURL",value:function(e,t,n){var r=e.genome_build||this.params.build,o=this.params.source;return y(this.constructor.name,r,o),r&&(o="GRCh38"===r?4:5),"".concat(this.url,"?filter=source in ").concat(o," and chrom eq '").concat(e.chr,"' and start le ").concat(e.end," and end ge ").concat(e.start)}},{key:"normalizeResponse",value:function(e){return e}},{key:"extractFields",value:function(e,t,n,r){return e}}]),n}(v),R=function(e){u(n,e);var t=s(n);function n(e){var r;return h(this,n),(r=t.call(this,e)).__dependentSource=!0,r}return d(n,[{key:"getURL",value:function(){return this.url}},{key:"getCacheKey",value:function(e,t,n){var r=e.genome_build||this.params.build;return"".concat(this.url," ").concat(e.chr," ").concat(e.start," ").concat(e.end," ").concat(r)}},{key:"normalizeResponse",value:function(e){return e}},{key:"fetchRequest",value:function(e,t,n){var r=e.genome_build||this.params.build;if(!r)throw new Error("Data source ".concat(this.constructor.name," must specify a 'genome_build' option"));var o=t.body.reduce((function(e,t){return e[t.gene_name]=null,e}),{}),a=Object.keys(o).map((function(e){var t="_".concat(e.replace(/[^A-Za-z0-9_]/g,"_"));return"".concat(t,': gene(gene_symbol: "').concat(e,'", reference_genome: ').concat(r,") { gnomad_constraint { exp_syn obs_syn syn_z oe_syn oe_syn_lower oe_syn_upper exp_mis obs_mis mis_z oe_mis oe_mis_lower oe_mis_upper exp_lof obs_lof pLI oe_lof oe_lof_lower oe_lof_upper } } ")}));if(!a.length)return Promise.resolve({data:null});a="{".concat(a.join(" ")," }");var i=this.getURL(e,t,n),u=JSON.stringify({query:a});return fetch(i,{method:"POST",body:u,headers:{"Content-Type":"application/json"}}).then((function(e){return e.ok?e.text():[]})).catch((function(e){return[]}))}},{key:"combineChainBody",value:function(e,t,n,r,o){return e?(t.body.forEach((function(t){var n="_".concat(t.gene_name.replace(/[^A-Za-z0-9_]/g,"_")),r=e[n]&&e[n].gnomad_constraint;r&&Object.keys(r).forEach((function(e){var n=r[e];void 0===t[e]&&("number"==typeof n&&n.toString().includes(".")&&(n=parseFloat(n.toFixed(2))),t[e]=n)}))})),t.body):t}}]),n}(v),k=function(e){u(n,e);var t=s(n);function n(){return h(this,n),t.apply(this,arguments)}return d(n,[{key:"getURL",value:function(e,t,n){var r=e.genome_build||this.params.build,o=this.params.source;return y(this.constructor.SOURCE_NAME,r,o),r&&(o="GRCh38"===r?16:15),"".concat(this.url,"?filter=id in ").concat(o," and chromosome eq '").concat(e.chr,"' and position le ").concat(e.end," and position ge ").concat(e.start)}}]),n}(v),O=function(e){u(n,e);var t=s(n);function n(){return h(this,n),t.apply(this,arguments)}return d(n,[{key:"parseInit",value:function(e){this._data=e}},{key:"getRequest",value:function(e,t,n){return Promise.resolve(this._data)}}]),n}(g),S=function(e){u(n,e);var t=s(n);function n(){return h(this,n),t.apply(this,arguments)}return d(n,[{key:"getURL",value:function(e,t,n){var r=(e.genome_build?[e.genome_build]:null)||this.params.build;if(!r||!Array.isArray(r)||!r.length)throw new Error(["Data source",this.constructor.SOURCE_NAME,"requires that you specify array of one or more desired genome build names"].join(" "));return[this.url,"?filter=variant eq '",encodeURIComponent(e.variant),"'&format=objects&",r.map((function(e){return"build=".concat(encodeURIComponent(e))})).join("&")].join("")}}]),n}(v),j=function(e){u(n,e);var t=s(n);function n(e){var r;if(h(this,n),r=t.call(this,e),!e||!e.sources)throw new Error("Connectors must specify the data they require as init.sources = {internal_name: chain_source_id}} pairs");r._source_name_mapping=e.sources;var o=Object.keys(e.sources);return r._getRequiredSources().forEach((function(e){if(!o.includes(e))throw new Error("Configuration for ".concat(r.constructor.name," must specify a source ID corresponding to ").concat(e))})),r}return d(n,[{key:"parseInit",value:function(){}},{key:"getRequest",value:function(e,t,n){var r=this;return Object.keys(this._source_name_mapping).forEach((function(e){var n=r._source_name_mapping[e];if(t.discrete&&!t.discrete[n])throw new Error("".concat(r.constructor.name," cannot be used before loading required data for: ").concat(n))})),Promise.resolve(t.body||[])}},{key:"parseResponse",value:function(e,t,n,r,o){return Promise.resolve(this.combineChainBody(e,t,n,r,o)).then((function(e){return{header:t.header||{},discrete:t.discrete||{},body:e}}))}},{key:"combineChainBody",value:function(e,t){throw new Error("This method must be implemented in a subclass")}},{key:"_getRequiredSources",value:function(){throw new Error("Must specify an array that identifes the kind of data required by this source")}}]),n}(g)},5:function(e,t){e.exports=raremetal}}).default;
//# sourceMappingURL=lz-aggregation-tests.min.js.map