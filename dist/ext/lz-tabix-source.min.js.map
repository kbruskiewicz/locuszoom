{"version":3,"sources":["webpack://[name]/webpack/bootstrap","webpack://[name]/./esm/ext/lz-tabix-source.js","webpack://[name]/external \"tabix\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","install","LocusZoom","TabixUrlSource","init","parser_func","url_data","Error","this","parser","url_tbi","params","_overfetch","overfetch","_reader_promise","tabix","urlReader","state","chr","start","end","join","Promise","resolve","reject","region_start","region_end","extra_amount","then","reader","fetch","data","err","map","Adapters","add","use"],"mappings":"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","file":"ext/lz-tabix-source.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","/**\nA datasource that fetches data from a remote Tabix file, instead of a RESTful API.\nRequires a generic user-specified parser.\n\nThe page must incorporate and load all libraries before this file can be used, including:\n - Vendor assets\n - LocusZoom\n - tabix-reader (available via NPM or a related CDN)\n\n @module\n*/\nimport tabix from 'tabix-reader';\n\n\nfunction install(LocusZoom) {\n    const BaseAdapter = LocusZoom.Adapters.get('BaseAdapter');\n\n    /**\n     * Custom data source that loads data from a remote Tabix file (if the file host has been configured with proper\n     *  CORS and Range header support- most hosts do not do that by default).\n     *\n     * @param {Object} init.params\n     * @param {Object} init.params.fields\n     * @param {String} init.params.fields.log_pvalue The name of the field containing pvalue information\n     * @param {Number} [init.params.threshold=0.95] The credible set threshold (eg 95%)\n     */\n    class TabixUrlSource extends BaseAdapter {\n        /**\n         * @param {Object} init\n         * @param {function} init.parser_func A function that parses a single line of text and returns (usually) a\n         *  structured object of data fields\n         * @param {string} init.url_data The URL for the bgzipped and tabix-indexed file\n         * @param {string} [init.url_tbi] The URL for the tabix index. Defaults to `url_data` + '.tbi'\n         * @param {Object} [init.params]\n         * @param {number} [init.params.overfetch = 0] Optionally fetch more data than is required to satisfy the\n         *  region query. (specified as a fraction of the region size, 0-1)\n         *  Useful for sources where interesting features might lie near the edges of the plot.\n         */\n        parseInit(init) {\n            if (!init.parser_func || !init.url_data) {\n                throw new Error('Tabix source is missing required configuration options');\n            }\n            this.parser = init.parser_func;\n            // TODO: In the future, accept a pre-configured reader instance (as an alternative to the URL). Most useful\n            //   for UIs that want to validate the tabix file before adding it to the plot, like LocalZoom.\n            this.url_data = init.url_data;\n            this.url_tbi = init.url_tbi || `${this.url_data}.tbi`;\n\n            // In tabix mode, sometimes we want to fetch a slightly larger region than is displayed, in case a\n            //    feature is on the edge of what the tabix query would return.\n            //    Specify overfetch in units of % of total region size. (\"fetch 10% extra before and after\")\n            const params = init.params || {};\n            this.params = params;\n            this._overfetch = params.overfetch || 0;\n\n            if (this._overfetch < 0 || this._overfetch > 1) {\n                throw new Error('Overfetch must be specified as a fraction (0-1) of the requested region size');\n            }\n\n            // Assuming that the `tabix-reader` library has been loaded via a CDN, this will create the reader\n            // Since fetching the index is a remote operation, all reader usages will be via an async interface.\n            this._reader_promise = tabix.urlReader(this.url_data, this.url_tbi).catch(function () {\n                throw new Error('Failed to create a tabix reader from the provided URL');\n            });\n        }\n\n        getCacheKey(state /*, chain, fields*/) {\n            // In generic form, Tabix queries are based on chr, start, and end. The cache is thus controlled by the query,\n            //  not the URL\n            return [state.chr, state.start, state.end, this._overfetch].join('_');\n        }\n\n        fetchRequest(state /*, chain, fields */) {\n            return new Promise((resolve, reject) => {\n                // Ensure that the reader is fully created (and index available), then make a query\n                const region_start = state.start;\n                const region_end = state.end;\n                const extra_amount = this._overfetch * (region_end - region_start);\n\n                const start = state.start - extra_amount;\n                const end = state.end + extra_amount;\n                this._reader_promise.then((reader) => {\n                    reader.fetch(state.chr, start, end, function (data, err) {\n                        if (err) {\n                            reject(new Error('Could not read requested region. This may indicate an error with the .tbi index.'));\n                        }\n                        resolve(data);\n                    });\n                });\n            });\n        }\n\n        normalizeResponse(data) {\n            // Parse the data from lines of text to objects\n            return data.map(this.parser);\n        }\n    }\n\n    LocusZoom.Adapters.add('TabixUrlSource', TabixUrlSource);\n}\n\nif (typeof LocusZoom !== 'undefined') {\n    // Auto-register the plugin when included as a script tag. ES6 module users must register via LocusZoom.use()\n    // eslint-disable-next-line no-undef\n    LocusZoom.use(install);\n}\n\n\nexport default install;\n\n","module.exports = tabix;"],"sourceRoot":""}